

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 16 15:01:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213     0697                     __pidataBANK0:
   214                           
   215                           ;initializer for _DISPLAY
   216     0697  343F               	retlw	63
   217     0698  3406               	retlw	6
   218     0699  345B               	retlw	91
   219     069A  344F               	retlw	79
   220     069B  3466               	retlw	102
   221     069C  346D               	retlw	109
   222     069D  347D               	retlw	125
   223     069E  3407               	retlw	7
   224     069F  347F               	retlw	127
   225     06A0  346F               	retlw	111
   226     06A1  3477               	retlw	119
   227     06A2  347C               	retlw	124
   228     06A3  3439               	retlw	57
   229     06A4  345E               	retlw	94
   230     06A5  3479               	retlw	121
   231     06A6  3471               	retlw	113
   232     0006                     _PORTB	set	6
   233     0007                     _PORTC	set	7
   234     0008                     _PORTD	set	8
   235     0006                     _PORTBbits	set	6
   236     001E                     _ADRESH	set	30
   237     001F                     _ADCON0bits	set	31
   238     0066                     _ADIF	set	102
   239     009F                     _ADCON1bits	set	159
   240     0085                     _TRISA	set	133
   241     008F                     _OSCCONbits	set	143
   242     0086                     _TRISBbits	set	134
   243     0088                     _TRISD	set	136
   244     0087                     _TRISC	set	135
   245     0188                     _ANSEL	set	392
   246     0189                     _ANSELH	set	393
   247                           
   248                           	psect	cinit
   249     07EA                     start_initialization:	
   250                           ; #config settings
   251                           
   252     07EA                     __initialization:
   253                           
   254                           ; Initialize objects allocated to BANK0
   255     07EA  1383               	bcf	3,7	;select IRP bank0
   256     07EB  3030               	movlw	low (__pdataBANK0+16)
   257     07EC  00FD               	movwf	btemp+-1
   258     07ED  3006               	movlw	high __pidataBANK0
   259     07EE  00FE               	movwf	btemp
   260     07EF  3097               	movlw	low __pidataBANK0
   261     07F0  00FF               	movwf	btemp+1
   262     07F1  3020               	movlw	low __pdataBANK0
   263     07F2  0084               	movwf	4
   264     07F3  120A  118A  26AB  120A  118A  	fcall	init_ram0
   265                           
   266                           ; Clear objects allocated to BANK0
   267     07F8  01B0               	clrf	__pbssBANK0& (0+127)
   268     07F9  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   269     07FA  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   270                           
   271                           ; Clear objects allocated to COMMON
   272     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   273     07FC                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276     07FC                     __end_of__initialization:
   277     07FC  0183               	clrf	3
   278     07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMMON
   281     007D                     __pbssCOMMON:
   282     007D                     _ADC:
   283     007D                     	ds	1
   284                           
   285                           	psect	bssBANK0
   286     0030                     __pbssBANK0:
   287     0030                     _dis2:
   288     0030                     	ds	1
   289     0031                     _dis1:
   290     0031                     	ds	1
   291     0032                     _alarma:
   292     0032                     	ds	1
   293                           
   294                           	psect	dataBANK0
   295     0020                     __pdataBANK0:
   296     0020                     _DISPLAY:
   297     0020                     	ds	16
   298                           
   299                           	psect	inittext
   300     06A7                     init_fetch0:	
   301                           ;	Called with low address in FSR and high address in W
   302                           
   303     06A7  087E               	movf	btemp,w
   304     06A8  008A               	movwf	10
   305     06A9  087F               	movf	btemp+1,w
   306     06AA  0082               	movwf	2
   307     06AB                     init_ram0:	
   308                           ;Called with:
   309                           ;	high address of idata address in btemp 
   310                           ;	low address of idata address in btemp+1 
   311                           ;	low address of data in FSR
   312                           ;	high address + 1 of data in btemp-1
   313                           
   314     06AB  120A  118A  26A7  120A  118A  	fcall	init_fetch0
   315     06B0  0080               	movwf	0
   316     06B1  0A84               	incf	4,f
   317     06B2  0804               	movf	4,w
   318     06B3  067D               	xorwf	btemp+-1,w
   319     06B4  1903               	btfsc	3,2
   320     06B5  3400               	retlw	0
   321     06B6  0AFF               	incf	btemp+1,f
   322     06B7  1903               	btfsc	3,2
   323     06B8  0AFE               	incf	btemp,f
   324     06B9  2EAB               	goto	init_ram0
   325                           
   326                           	psect	cstackCOMMON
   327     0070                     __pcstackCOMMON:
   328     0070                     ?_setup:
   329     0070                     ??_setup:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_setupADC:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ??_setupADC:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?___awdiv:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ___awdiv@divisor:	
   345                           ; 2 bytes @ 0x0
   346                           
   347                           
   348                           ; 2 bytes @ 0x0
   349     0070                     	ds	2
   350     0072                     ___awdiv@dividend:
   351                           
   352                           ; 2 bytes @ 0x2
   353     0072                     	ds	2
   354     0074                     ??___awdiv:
   355                           
   356                           ; 1 bytes @ 0x4
   357     0074                     	ds	1
   358     0075                     ___awdiv@counter:
   359                           
   360                           ; 1 bytes @ 0x5
   361     0075                     	ds	1
   362     0076                     ___awdiv@sign:
   363                           
   364                           ; 1 bytes @ 0x6
   365     0076                     	ds	1
   366     0077                     ___awdiv@quotient:
   367                           
   368                           ; 2 bytes @ 0x7
   369     0077                     	ds	2
   370     0079                     ?_valores:
   371     0079                     valores@valor:	
   372                           ; 1 bytes @ 0x9
   373                           
   374                           
   375                           ; 2 bytes @ 0x9
   376     0079                     	ds	2
   377     007B                     ??_valores:
   378     007B                     ??_main:	
   379                           ; 1 bytes @ 0xB
   380                           
   381                           
   382                           ; 1 bytes @ 0xB
   383     007B                     	ds	2
   384                           
   385                           	psect	maintext
   386     0774                     __pmaintext:	
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 62 in file "lab4.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          2       0       0       0       0
   409 ;;      Totals:         2       0       0       0       0
   410 ;;Total ram usage:        2 bytes
   411 ;; Hardware stack levels required when called: 2
   412 ;; This function calls:
   413 ;;		_setup
   414 ;;		_setupADC
   415 ;;		_valores
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     0774                     _main:	
   422                           ;psect for function _main
   423                           
   424     0774                     l898:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;lab4.c: 64:     setup();
   430     0774  120A  118A  26CF  120A  118A  	fcall	_setup
   431                           
   432                           ;lab4.c: 65:     setupADC();
   433     0779  120A  118A  26EE  120A  118A  	fcall	_setupADC
   434     077E                     l900:
   435                           
   436                           ;lab4.c: 71:         ADCON0bits.GO = 1;
   437     077E  1283               	bcf	3,5	;RP0=0, select bank0
   438     077F  1303               	bcf	3,6	;RP1=0, select bank0
   439     0780  149F               	bsf	31,1	;volatile
   440     0781                     l54:	
   441                           ;lab4.c: 74:         }
   442                           
   443                           
   444                           ;lab4.c: 72:         while(ADCON0bits.GO == 1){
   445     0781  189F               	btfsc	31,1	;volatile
   446     0782  2F84               	goto	u281
   447     0783  2F85               	goto	u280
   448     0784                     u281:
   449     0784  2F81               	goto	l54
   450     0785                     u280:
   451     0785                     l56:
   452                           
   453                           ;lab4.c: 75:         ADIF = 0;
   454     0785  130C               	bcf	12,6	;volatile
   455     0786                     l902:
   456                           
   457                           ;lab4.c: 76:         ADC = ADRESH;
   458     0786  081E               	movf	30,w	;volatile
   459     0787  00FD               	movwf	_ADC
   460                           
   461                           ;lab4.c: 77:         alarma = ADC;
   462     0788  087D               	movf	_ADC,w
   463     0789  00B2               	movwf	_alarma
   464     078A                     l904:
   465                           
   466                           ;lab4.c: 78:         valores(ADC);
   467     078A  087D               	movf	_ADC,w
   468     078B  00FB               	movwf	??_main
   469     078C  01FC               	clrf	??_main+1
   470     078D  087B               	movf	??_main,w
   471     078E  00F9               	movwf	valores@valor
   472     078F  087C               	movf	??_main+1,w
   473     0790  00FA               	movwf	valores@valor+1
   474     0791  120A  118A  26BA  120A  118A  	fcall	_valores
   475     0796                     l906:
   476                           
   477                           ;lab4.c: 82:         PORTBbits.RB4 = 1;
   478     0796  1283               	bcf	3,5	;RP0=0, select bank0
   479     0797  1303               	bcf	3,6	;RP1=0, select bank0
   480     0798  1606               	bsf	6,4	;volatile
   481     0799                     l908:
   482                           
   483                           ;lab4.c: 83:         PORTBbits.RB5 = 0;
   484     0799  1286               	bcf	6,5	;volatile
   485     079A                     l910:
   486                           
   487                           ;lab4.c: 84:         PORTD = DISPLAY[dis2];
   488     079A  0830               	movf	_dis2,w
   489     079B  3E20               	addlw	(low (_DISPLAY| 0))& (0+255)
   490     079C  0084               	movwf	4
   491     079D  1383               	bcf	3,7	;select IRP bank0
   492     079E  0800               	movf	0,w
   493     079F  0088               	movwf	8	;volatile
   494     07A0                     l912:
   495                           
   496                           ;lab4.c: 85:         _delay((unsigned long)((10)*(4000000/4000.0)));
   497     07A0  300D               	movlw	13
   498     07A1  00FC               	movwf	??_main+1
   499     07A2  30FB               	movlw	251
   500     07A3  00FB               	movwf	??_main
   501     07A4                     u357:
   502     07A4  0BFB               	decfsz	??_main,f
   503     07A5  2FA4               	goto	u357
   504     07A6  0BFC               	decfsz	??_main+1,f
   505     07A7  2FA4               	goto	u357
   506     07A8  2FA9               	nop2
   507     07A9                     l914:
   508                           
   509                           ;lab4.c: 87:         PORTBbits.RB4 = 0;
   510     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   511     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   512     07AB  1206               	bcf	6,4	;volatile
   513     07AC                     l916:
   514                           
   515                           ;lab4.c: 88:         PORTBbits.RB5 = 1;
   516     07AC  1686               	bsf	6,5	;volatile
   517     07AD                     l918:
   518                           
   519                           ;lab4.c: 89:         PORTD = DISPLAY[dis1];
   520     07AD  0831               	movf	_dis1,w
   521     07AE  3E20               	addlw	(low (_DISPLAY| 0))& (0+255)
   522     07AF  0084               	movwf	4
   523     07B0  1383               	bcf	3,7	;select IRP bank0
   524     07B1  0800               	movf	0,w
   525     07B2  0088               	movwf	8	;volatile
   526     07B3                     l920:
   527                           
   528                           ;lab4.c: 90:         _delay((unsigned long)((10)*(4000000/4000.0)));
   529     07B3  300D               	movlw	13
   530     07B4  00FC               	movwf	??_main+1
   531     07B5  30FB               	movlw	251
   532     07B6  00FB               	movwf	??_main
   533     07B7                     u367:
   534     07B7  0BFB               	decfsz	??_main,f
   535     07B8  2FB7               	goto	u367
   536     07B9  0BFC               	decfsz	??_main+1,f
   537     07BA  2FB7               	goto	u367
   538     07BB  2FBC               	nop2
   539     07BC                     l922:
   540                           
   541                           ;lab4.c: 98:         if(PORTBbits.RB1 == 1){
   542     07BC  1283               	bcf	3,5	;RP0=0, select bank0
   543     07BD  1303               	bcf	3,6	;RP1=0, select bank0
   544     07BE  1C86               	btfss	6,1	;volatile
   545     07BF  2FC1               	goto	u291
   546     07C0  2FC2               	goto	u290
   547     07C1                     u291:
   548     07C1  2FCB               	goto	l57
   549     07C2                     u290:
   550     07C2                     l58:	
   551                           ;lab4.c: 101:             }
   552                           
   553                           
   554                           ;lab4.c: 99:             while(PORTBbits.RB1 == 1){
   555     07C2  1886               	btfsc	6,1	;volatile
   556     07C3  2FC5               	goto	u301
   557     07C4  2FC6               	goto	u300
   558     07C5                     u301:
   559     07C5  2FC2               	goto	l58
   560     07C6                     u300:
   561     07C6                     l926:
   562                           
   563                           ;lab4.c: 102:             PORTC ++;
   564     07C6  3001               	movlw	1
   565     07C7  00FB               	movwf	??_main
   566     07C8  087B               	movf	??_main,w
   567     07C9  0787               	addwf	7,f	;volatile
   568                           
   569                           ;lab4.c: 103:         }
   570     07CA  2F7E               	goto	l900
   571     07CB                     l57:	
   572                           ;lab4.c: 104:         else if(PORTBbits.RB2 == 1){
   573                           
   574     07CB  1D06               	btfss	6,2	;volatile
   575     07CC  2FCE               	goto	u311
   576     07CD  2FCF               	goto	u310
   577     07CE                     u311:
   578     07CE  2FD6               	goto	l62
   579     07CF                     u310:
   580     07CF                     l63:	
   581                           ;lab4.c: 107:             }
   582                           
   583                           
   584                           ;lab4.c: 105:             while(PORTBbits.RB2 == 1){
   585     07CF  1906               	btfsc	6,2	;volatile
   586     07D0  2FD2               	goto	u321
   587     07D1  2FD3               	goto	u320
   588     07D2                     u321:
   589     07D2  2FCF               	goto	l63
   590     07D3                     u320:
   591     07D3                     l930:
   592                           
   593                           ;lab4.c: 108:             PORTC -- ;
   594     07D3  3001               	movlw	1
   595     07D4  0287               	subwf	7,f	;volatile
   596                           
   597                           ;lab4.c: 110:         }
   598     07D5  2F7E               	goto	l900
   599     07D6                     l62:	
   600                           ;lab4.c: 111:         else if(PORTBbits.RB3){
   601                           
   602     07D6  1D86               	btfss	6,3	;volatile
   603     07D7  2FD9               	goto	u331
   604     07D8  2FDA               	goto	u330
   605     07D9                     u331:
   606     07D9  2FE4               	goto	l936
   607     07DA                     u330:
   608     07DA                     l932:
   609                           
   610                           ;lab4.c: 112:             if (alarma>PORTC){
   611     07DA  0832               	movf	_alarma,w
   612     07DB  0207               	subwf	7,w	;volatile
   613     07DC  1803               	skipnc
   614     07DD  2FDF               	goto	u341
   615     07DE  2FE0               	goto	u340
   616     07DF                     u341:
   617     07DF  2FE2               	goto	l68
   618     07E0                     u340:
   619     07E0                     l934:
   620                           
   621                           ;lab4.c: 113:                 PORTBbits.RB0 = 1;
   622     07E0  1406               	bsf	6,0	;volatile
   623                           
   624                           ;lab4.c: 114:             }
   625     07E1  2F7E               	goto	l900
   626     07E2                     l68:	
   627                           ;lab4.c: 115:             else {
   628                           
   629                           
   630                           ;lab4.c: 116:                 PORTBbits.RB0 = 0;
   631     07E2  1006               	bcf	6,0	;volatile
   632     07E3  2F7E               	goto	l900
   633     07E4                     l936:
   634                           
   635                           ;lab4.c: 120:         PORTC = PORTC;
   636     07E4  0807               	movf	7,w	;volatile
   637     07E5  0087               	movwf	7	;volatile
   638     07E6  2F7E               	goto	l900
   639     07E7  120A  118A  2800   	ljmp	start
   640     07EA                     __end_of_main:
   641                           
   642                           	psect	text1
   643     06BA                     __ptext1:	
   644 ;; *************** function _valores *****************
   645 ;; Defined at:
   646 ;;		line 130 in file "lab4.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  valor           2    9[COMMON] int 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         2       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         2       0       0       0       0
   664 ;;Total ram usage:        2 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 1
   667 ;; This function calls:
   668 ;;		___awdiv
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674     06BA                     _valores:	
   675                           ;psect for function _valores
   676                           
   677     06BA                     l894:	
   678                           ;incstack = 0
   679                           ; Regs used in _valores: [wreg+status,2+status,0+pclath+cstack]
   680                           
   681                           
   682                           ;lab4.c: 131:     dis1 = (uint8_t)(valor/16);
   683     06BA  3010               	movlw	16
   684     06BB  00F0               	movwf	___awdiv@divisor
   685     06BC  3000               	movlw	0
   686     06BD  00F1               	movwf	___awdiv@divisor+1
   687     06BE  087A               	movf	valores@valor+1,w
   688     06BF  00F3               	movwf	___awdiv@dividend+1
   689     06C0  0879               	movf	valores@valor,w
   690     06C1  00F2               	movwf	___awdiv@dividend
   691     06C2  120A  118A  270D  120A  118A  	fcall	___awdiv
   692     06C7  0870               	movf	?___awdiv,w
   693     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   694     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   695     06CA  00B1               	movwf	_dis1
   696     06CB                     l896:
   697                           
   698                           ;lab4.c: 132:     dis2 = (uint8_t)(valor%16);
   699     06CB  0879               	movf	valores@valor,w
   700     06CC  390F               	andlw	15
   701     06CD  00B0               	movwf	_dis2
   702     06CE                     l76:
   703     06CE  0008               	return
   704     06CF                     __end_of_valores:
   705                           
   706                           	psect	text2
   707     070D                     __ptext2:	
   708 ;; *************** function ___awdiv *****************
   709 ;; Defined at:
   710 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  divisor         2    0[COMMON] int 
   713 ;;  dividend        2    2[COMMON] int 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  quotient        2    7[COMMON] int 
   716 ;;  sign            1    6[COMMON] unsigned char 
   717 ;;  counter         1    5[COMMON] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  2    0[COMMON] int 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         4       0       0       0       0
   728 ;;      Locals:         4       0       0       0       0
   729 ;;      Temps:          1       0       0       0       0
   730 ;;      Totals:         9       0       0       0       0
   731 ;;Total ram usage:        9 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_valores
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740     070D                     ___awdiv:	
   741                           ;psect for function ___awdiv
   742                           
   743     070D                     l806:	
   744                           ;incstack = 0
   745                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   746                           
   747     070D  01F6               	clrf	___awdiv@sign
   748     070E                     l808:
   749     070E  1FF1               	btfss	___awdiv@divisor+1,7
   750     070F  2F11               	goto	u181
   751     0710  2F12               	goto	u180
   752     0711                     u181:
   753     0711  2F19               	goto	l814
   754     0712                     u180:
   755     0712                     l810:
   756     0712  09F0               	comf	___awdiv@divisor,f
   757     0713  09F1               	comf	___awdiv@divisor+1,f
   758     0714  0AF0               	incf	___awdiv@divisor,f
   759     0715  1903               	skipnz
   760     0716  0AF1               	incf	___awdiv@divisor+1,f
   761     0717                     l812:
   762     0717  01F6               	clrf	___awdiv@sign
   763     0718  0AF6               	incf	___awdiv@sign,f
   764     0719                     l814:
   765     0719  1FF3               	btfss	___awdiv@dividend+1,7
   766     071A  2F1C               	goto	u191
   767     071B  2F1D               	goto	u190
   768     071C                     u191:
   769     071C  2F26               	goto	l820
   770     071D                     u190:
   771     071D                     l816:
   772     071D  09F2               	comf	___awdiv@dividend,f
   773     071E  09F3               	comf	___awdiv@dividend+1,f
   774     071F  0AF2               	incf	___awdiv@dividend,f
   775     0720  1903               	skipnz
   776     0721  0AF3               	incf	___awdiv@dividend+1,f
   777     0722                     l818:
   778     0722  3001               	movlw	1
   779     0723  00F4               	movwf	??___awdiv
   780     0724  0874               	movf	??___awdiv,w
   781     0725  06F6               	xorwf	___awdiv@sign,f
   782     0726                     l820:
   783     0726  01F7               	clrf	___awdiv@quotient
   784     0727  01F8               	clrf	___awdiv@quotient+1
   785     0728                     l822:
   786     0728  0870               	movf	___awdiv@divisor,w
   787     0729  0471               	iorwf	___awdiv@divisor+1,w
   788     072A  1903               	btfsc	3,2
   789     072B  2F2D               	goto	u201
   790     072C  2F2E               	goto	u200
   791     072D                     u201:
   792     072D  2F65               	goto	l842
   793     072E                     u200:
   794     072E                     l824:
   795     072E  01F5               	clrf	___awdiv@counter
   796     072F  0AF5               	incf	___awdiv@counter,f
   797     0730  2F3C               	goto	l830
   798     0731                     l826:
   799     0731  3001               	movlw	1
   800     0732                     u215:
   801     0732  1003               	clrc
   802     0733  0DF0               	rlf	___awdiv@divisor,f
   803     0734  0DF1               	rlf	___awdiv@divisor+1,f
   804     0735  3EFF               	addlw	-1
   805     0736  1D03               	skipz
   806     0737  2F32               	goto	u215
   807     0738                     l828:
   808     0738  3001               	movlw	1
   809     0739  00F4               	movwf	??___awdiv
   810     073A  0874               	movf	??___awdiv,w
   811     073B  07F5               	addwf	___awdiv@counter,f
   812     073C                     l830:
   813     073C  1FF1               	btfss	___awdiv@divisor+1,7
   814     073D  2F3F               	goto	u221
   815     073E  2F40               	goto	u220
   816     073F                     u221:
   817     073F  2F31               	goto	l826
   818     0740                     u220:
   819     0740                     l832:
   820     0740  3001               	movlw	1
   821     0741                     u235:
   822     0741  1003               	clrc
   823     0742  0DF7               	rlf	___awdiv@quotient,f
   824     0743  0DF8               	rlf	___awdiv@quotient+1,f
   825     0744  3EFF               	addlw	-1
   826     0745  1D03               	skipz
   827     0746  2F41               	goto	u235
   828     0747  0871               	movf	___awdiv@divisor+1,w
   829     0748  0273               	subwf	___awdiv@dividend+1,w
   830     0749  1D03               	skipz
   831     074A  2F4D               	goto	u245
   832     074B  0870               	movf	___awdiv@divisor,w
   833     074C  0272               	subwf	___awdiv@dividend,w
   834     074D                     u245:
   835     074D  1C03               	skipc
   836     074E  2F50               	goto	u241
   837     074F  2F51               	goto	u240
   838     0750                     u241:
   839     0750  2F58               	goto	l838
   840     0751                     u240:
   841     0751                     l834:
   842     0751  0870               	movf	___awdiv@divisor,w
   843     0752  02F2               	subwf	___awdiv@dividend,f
   844     0753  0871               	movf	___awdiv@divisor+1,w
   845     0754  1C03               	skipc
   846     0755  03F3               	decf	___awdiv@dividend+1,f
   847     0756  02F3               	subwf	___awdiv@dividend+1,f
   848     0757                     l836:
   849     0757  1477               	bsf	___awdiv@quotient,0
   850     0758                     l838:
   851     0758  3001               	movlw	1
   852     0759                     u255:
   853     0759  1003               	clrc
   854     075A  0CF1               	rrf	___awdiv@divisor+1,f
   855     075B  0CF0               	rrf	___awdiv@divisor,f
   856     075C  3EFF               	addlw	-1
   857     075D  1D03               	skipz
   858     075E  2F59               	goto	u255
   859     075F                     l840:
   860     075F  3001               	movlw	1
   861     0760  02F5               	subwf	___awdiv@counter,f
   862     0761  1D03               	btfss	3,2
   863     0762  2F64               	goto	u261
   864     0763  2F65               	goto	u260
   865     0764                     u261:
   866     0764  2F40               	goto	l832
   867     0765                     u260:
   868     0765                     l842:
   869     0765  0876               	movf	___awdiv@sign,w
   870     0766  1903               	btfsc	3,2
   871     0767  2F69               	goto	u271
   872     0768  2F6A               	goto	u270
   873     0769                     u271:
   874     0769  2F6F               	goto	l846
   875     076A                     u270:
   876     076A                     l844:
   877     076A  09F7               	comf	___awdiv@quotient,f
   878     076B  09F8               	comf	___awdiv@quotient+1,f
   879     076C  0AF7               	incf	___awdiv@quotient,f
   880     076D  1903               	skipnz
   881     076E  0AF8               	incf	___awdiv@quotient+1,f
   882     076F                     l846:
   883     076F  0878               	movf	___awdiv@quotient+1,w
   884     0770  00F1               	movwf	?___awdiv+1
   885     0771  0877               	movf	___awdiv@quotient,w
   886     0772  00F0               	movwf	?___awdiv
   887     0773                     l321:
   888     0773  0008               	return
   889     0774                     __end_of___awdiv:
   890                           
   891                           	psect	text3
   892     06EE                     __ptext3:	
   893 ;; *************** function _setupADC *****************
   894 ;; Defined at:
   895 ;;		line 160 in file "lab4.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0
   912 ;;      Totals:         1       0       0       0       0
   913 ;;Total ram usage:        1 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922     06EE                     _setupADC:	
   923                           ;psect for function _setupADC
   924                           
   925     06EE                     l870:	
   926                           ;incstack = 0
   927                           ; Regs used in _setupADC: [wreg+status,2]
   928                           
   929                           
   930                           ;lab4.c: 164:     TRISA = TRISA | 0x01;
   931     06EE  1683               	bsf	3,5	;RP0=1, select bank1
   932     06EF  1303               	bcf	3,6	;RP1=0, select bank1
   933     06F0  0805               	movf	5,w	;volatile
   934     06F1  3801               	iorlw	1
   935     06F2  0085               	movwf	5	;volatile
   936                           
   937                           ;lab4.c: 165:     ANSEL = ANSEL | 0x01;
   938     06F3  1683               	bsf	3,5	;RP0=1, select bank3
   939     06F4  1703               	bsf	3,6	;RP1=1, select bank3
   940     06F5  0808               	movf	8,w	;volatile
   941     06F6  3801               	iorlw	1
   942     06F7  0088               	movwf	8	;volatile
   943     06F8                     l872:
   944                           
   945                           ;lab4.c: 169:     ADCON0bits.ADCS1 = 0;
   946     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   947     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   948     06FA  139F               	bcf	31,7	;volatile
   949     06FB                     l874:
   950                           
   951                           ;lab4.c: 170:     ADCON0bits.ADCS0 = 1;
   952     06FB  171F               	bsf	31,6	;volatile
   953     06FC                     l876:
   954                           
   955                           ;lab4.c: 172:     ADCON1bits.VCFG1 = 0;
   956     06FC  1683               	bsf	3,5	;RP0=1, select bank1
   957     06FD  1303               	bcf	3,6	;RP1=0, select bank1
   958     06FE  129F               	bcf	31,5	;volatile
   959     06FF                     l878:
   960                           
   961                           ;lab4.c: 173:     ADCON1bits.VCFG0 = 0;
   962     06FF  121F               	bcf	31,4	;volatile
   963     0700                     l880:
   964                           
   965                           ;lab4.c: 175:     ADCON1bits.ADFM = 0;
   966     0700  139F               	bcf	31,7	;volatile
   967     0701                     l882:
   968                           
   969                           ;lab4.c: 177:     ADCON0bits.CHS3 = 0;
   970     0701  1283               	bcf	3,5	;RP0=0, select bank0
   971     0702  1303               	bcf	3,6	;RP1=0, select bank0
   972     0703  129F               	bcf	31,5	;volatile
   973     0704                     l884:
   974                           
   975                           ;lab4.c: 178:     ADCON0bits.CHS2 = 0;
   976     0704  121F               	bcf	31,4	;volatile
   977     0705                     l886:
   978                           
   979                           ;lab4.c: 179:     ADCON0bits.CHS1 = 0;
   980     0705  119F               	bcf	31,3	;volatile
   981     0706                     l888:
   982                           
   983                           ;lab4.c: 180:     ADCON0bits.CHS0 = 0;
   984     0706  111F               	bcf	31,2	;volatile
   985     0707                     l890:
   986                           
   987                           ;lab4.c: 182:     ADCON0bits.ADON = 1;
   988     0707  141F               	bsf	31,0	;volatile
   989     0708                     l892:
   990                           
   991                           ;lab4.c: 183:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   992     0708  3021               	movlw	33
   993     0709  00F0               	movwf	??_setupADC
   994     070A                     u377:
   995     070A  0BF0               	decfsz	??_setupADC,f
   996     070B  2F0A               	goto	u377
   997     070C                     l82:
   998     070C  0008               	return
   999     070D                     __end_of_setupADC:
  1000                           
  1001                           	psect	text4
  1002     06CF                     __ptext4:	
  1003 ;; *************** function _setup *****************
  1004 ;; Defined at:
  1005 ;;		line 141 in file "lab4.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          1       0       0       0       0
  1022 ;;      Totals:         1       0       0       0       0
  1023 ;;Total ram usage:        1 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     06CF                     _setup:	
  1033                           ;psect for function _setup
  1034                           
  1035     06CF                     l850:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _setup: [wreg+status,2+status,0]
  1038                           
  1039                           
  1040                           ;lab4.c: 142:     ANSELH = 0;
  1041     06CF  1683               	bsf	3,5	;RP0=1, select bank3
  1042     06D0  1703               	bsf	3,6	;RP1=1, select bank3
  1043     06D1  0189               	clrf	9	;volatile
  1044                           
  1045                           ;lab4.c: 143:     ANSEL = 0;
  1046     06D2  0188               	clrf	8	;volatile
  1047                           
  1048                           ;lab4.c: 144:     TRISC = 0;
  1049     06D3  1683               	bsf	3,5	;RP0=1, select bank1
  1050     06D4  1303               	bcf	3,6	;RP1=0, select bank1
  1051     06D5  0187               	clrf	7	;volatile
  1052                           
  1053                           ;lab4.c: 145:     PORTC = 0;
  1054     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1055     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1056     06D8  0187               	clrf	7	;volatile
  1057                           
  1058                           ;lab4.c: 146:     PORTB = 0;
  1059     06D9  0186               	clrf	6	;volatile
  1060                           
  1061                           ;lab4.c: 147:     PORTD = 0;
  1062     06DA  0188               	clrf	8	;volatile
  1063                           
  1064                           ;lab4.c: 148:     TRISD = 0;
  1065     06DB  1683               	bsf	3,5	;RP0=1, select bank1
  1066     06DC  1303               	bcf	3,6	;RP1=0, select bank1
  1067     06DD  0188               	clrf	8	;volatile
  1068     06DE                     l852:
  1069                           
  1070                           ;lab4.c: 149:     TRISBbits.TRISB1 = 1;
  1071     06DE  1486               	bsf	6,1	;volatile
  1072     06DF                     l854:
  1073                           
  1074                           ;lab4.c: 150:     TRISBbits.TRISB2 = 1;
  1075     06DF  1506               	bsf	6,2	;volatile
  1076     06E0                     l856:
  1077                           
  1078                           ;lab4.c: 151:     TRISBbits.TRISB3 = 1;
  1079     06E0  1586               	bsf	6,3	;volatile
  1080     06E1                     l858:
  1081                           
  1082                           ;lab4.c: 152:     TRISBbits.TRISB4 = 0;
  1083     06E1  1206               	bcf	6,4	;volatile
  1084     06E2                     l860:
  1085                           
  1086                           ;lab4.c: 153:     TRISBbits.TRISB5 = 0;
  1087     06E2  1286               	bcf	6,5	;volatile
  1088     06E3                     l862:
  1089                           
  1090                           ;lab4.c: 154:     TRISBbits.TRISB0 = 0;
  1091     06E3  1006               	bcf	6,0	;volatile
  1092     06E4                     l864:
  1093                           
  1094                           ;lab4.c: 155:     OSCCONbits.IRCF = 0b110;
  1095     06E4  080F               	movf	15,w	;volatile
  1096     06E5  398F               	andlw	-113
  1097     06E6  3860               	iorlw	96
  1098     06E7  008F               	movwf	15	;volatile
  1099     06E8                     l866:
  1100                           
  1101                           ;lab4.c: 156:     OSCCONbits.SCS = 1;
  1102     06E8  140F               	bsf	15,0	;volatile
  1103     06E9                     l868:
  1104                           
  1105                           ;lab4.c: 157:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1106     06E9  3021               	movlw	33
  1107     06EA  00F0               	movwf	??_setup
  1108     06EB                     u387:
  1109     06EB  0BF0               	decfsz	??_setup,f
  1110     06EC  2EEB               	goto	u387
  1111     06ED                     l79:
  1112     06ED  0008               	return
  1113     06EE                     __end_of_setup:
  1114     007E                     btemp	set	126	;btemp
  1115     007E                     wtemp0	set	126
  1116                           
  1117                           	psect	idloc
  1118                           
  1119                           ;Config register IDLOC0 @ 0x2000
  1120                           ;	unspecified, using default values
  1121     2000                     	org	8192
  1122     2000  3FFF               	dw	16383
  1123                           
  1124                           ;Config register IDLOC1 @ 0x2001
  1125                           ;	unspecified, using default values
  1126     2001                     	org	8193
  1127     2001  3FFF               	dw	16383
  1128                           
  1129                           ;Config register IDLOC2 @ 0x2002
  1130                           ;	unspecified, using default values
  1131     2002                     	org	8194
  1132     2002  3FFF               	dw	16383
  1133                           
  1134                           ;Config register IDLOC3 @ 0x2003
  1135                           ;	unspecified, using default values
  1136     2003                     	org	8195
  1137     2003  3FFF               	dw	16383
  1138                           
  1139                           	psect	config
  1140                           
  1141                           ;Config register CONFIG1 @ 0x2007
  1142                           ;	Oscillator Selection bits
  1143                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1144                           ;	Watchdog Timer Enable bit
  1145                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1146                           ;	Power-up Timer Enable bit
  1147                           ;	PWRTE = OFF, PWRT disabled
  1148                           ;	RE3/MCLR pin function select bit
  1149                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1150                           ;	Code Protection bit
  1151                           ;	CP = OFF, Program memory code protection is disabled
  1152                           ;	Data Code Protection bit
  1153                           ;	CPD = OFF, Data memory code protection is disabled
  1154                           ;	Brown Out Reset Selection bits
  1155                           ;	BOREN = OFF, BOR disabled
  1156                           ;	Internal External Switchover bit
  1157                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1158                           ;	Fail-Safe Clock Monitor Enabled bit
  1159                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1160                           ;	Low Voltage Programming Enable bit
  1161                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1162                           ;	In-Circuit Debugger Mode bit
  1163                           ;	DEBUG = 0x1, unprogramme  1164     2007                     	org	8199
  1165     2007  20D4               	dw	8404
  1166                           
  1167                           ;Config register CONFIG2 @ 0x2008
  1168                           ;	Brown-out Reset Selection bit
  1169                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1170                           ;	Flash Program Memory Self Write Enable bits
  1171                           ;	WRT = OFF, Write protection off
  1172     2008                     	org	8200
  1173     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_valores
    _valores->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     572
                                             11 COMMON     2     2      0
                              _setup
                           _setupADC
                            _valores
 ---------------------------------------------------------------------------------
 (1) _valores                                              2     0      2     572
                                              9 COMMON     2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _setupADC
   _valores
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 16 15:01:07 2022

                      pc 0002                       l62 07D6                       l54 0781  
                     l63 07CF                       l56 0785                       l57 07CB  
                     l82 070C                       l58 07C2                       l76 06CE  
                     l68 07E2                       l79 06ED             ___awdiv@sign 0076  
                     fsr 0004                      l321 0773                      _ADC 007D  
                    l810 0712                      l820 0726                      l812 0717  
                    l900 077E                      l830 073C                      l822 0728  
                    l814 0719                      l806 070D                      l910 079A  
                    l902 0786                      l840 075F                      l832 0740  
                    l824 072E                      l816 071D                      l808 070E  
                    l920 07B3                      l912 07A0                      l904 078A  
                    l850 06CF                      l834 0751                      l826 0731  
                    l842 0765                      l818 0722                      l930 07D3  
                    l922 07BC                      l914 07A9                      l906 0796  
                    l860 06E2                      l852 06DE                      l844 076A  
                    l836 0757                      l828 0738                      l932 07DA  
                    l916 07AC                      l908 0799                      l862 06E3  
                    l854 06DF                      l870 06EE                      l846 076F  
                    l838 0758                      l934 07E0                      l926 07C6  
                    l918 07AD                      l864 06E4                      l856 06E0  
                    l880 0700                      l872 06F8                      l936 07E4  
                    l866 06E8                      l858 06E1                      l890 0707  
                    l882 0701                      l874 06FB                      l868 06E9  
                    l892 0708                      l884 0704                      l876 06FC  
                    l886 0705                      l878 06FF                      l894 06BA  
                    l888 0706                      l896 06CB                      l898 0774  
                    u200 072E                      u201 072D                      u220 0740  
                    u300 07C6                      u221 073F                      u301 07C5  
                    u310 07CF                      u215 0732                      u311 07CE  
                    u240 0751                      u320 07D3                      u241 0750  
                    u321 07D2                      u330 07DA                      u235 0741  
                    u331 07D9                      u260 0765                      u180 0712  
                    u340 07E0                      u261 0764                      u245 074D  
                    u181 0711                      u341 07DF                      u270 076A  
                    u190 071D                      u271 0769                      u255 0759  
                    u191 071C                      u280 0785                      u281 0784  
                    u290 07C2                      u291 07C1                      u357 07A4  
                    u367 07B7                      u377 070A                      u387 06EB  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   _dis1 0031                     _dis2 0030                     _main 0774  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 0774                    _ANSEL 0188          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _setup 06CF                    pclath 000A  
        __end_of_valores 06CF                    status 0003                    wtemp0 007E  
        __initialization 07EA             __end_of_main 07EA                   ??_main 007B  
                 _ADRESH 001E         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                ??___awdiv 0074                   _alarma 0032  
       ___awdiv@quotient 0077         __end_of_setupADC 070D                ??_valores 007B  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0697  
          __end_of_setup 06EE                  ??_setup 0070               __pbssBANK0 0030  
             __pmaintext 0774                  _DISPLAY 0020                ?_setupADC 0070  
                ___awdiv 070D                  __ptext1 06BA                  __ptext2 070D  
                __ptext3 06EE                  __ptext4 06CF                  _valores 06BA  
   end_of_initialization 07FC               ??_setupADC 0070                _PORTBbits 0006  
              _TRISBbits 0086      start_initialization 07EA               init_fetch0 06A7  
            __pdataBANK0 0020              __pbssCOMMON 007D                ___latbits 0002  
               ?___awdiv 0070                 ?_valores 0079               _ADCON0bits 001F  
             _ADCON1bits 009F                 _setupADC 06EE                 init_ram0 06AB  
             _OSCCONbits 008F             valores@valor 0079  
